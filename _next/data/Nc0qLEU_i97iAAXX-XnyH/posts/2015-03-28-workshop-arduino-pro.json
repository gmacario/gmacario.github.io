{"pageProps":{"post":{"title":"Notes from the Arduino Day 2015 c/o Officine Arduino Torino","content":"<!-- markdown-link-check-disable -->\n\n<p>The <a href=\"https://day.arduino.cc/\">Arduino Day 2015</a> in Torino took place at <a href=\"http://www.toolboxoffice.it/\">Toolbox Coworking</a>, home of <a href=\"http://fablabtorino.org/\">FabLab Torino</a> and <a href=\"http://local.arduino.cc/torino/\">Officine Arduino</a>.</p>\n<p>I made a quick visit, mostly to attend the Arduino PRO workshop in the afternoon.</p>\n<h2 id=\"talks\">Talks</h2>\n<p>I had some time to attend a few talks before the Arduino PRO workshop started.</p>\n<h3 id=\"arduino-e-linternet-of-things\">Arduino e l’Internet of Things</h3>\n<p>(14:00-14:30)</p>\n<p>Speaker: Federico Vanzati</p>\n<p>Guest stars: Bruce and Jasmina Sterling -- talking about Casa Jasmina.</p>\n<h3 id=\"il-lato-web-di-arduino-dalle-evoluzioni-dei-siti-arduino-alliot\">Il lato web di Arduino, dalle evoluzioni dei siti Arduino all’IoT</h3>\n<p>(14:30-15:10)</p>\n<p>Speaker: Luca Cipriani</p>\n<h2 id=\"workshop-arduino-pro-arduino-day-2015\">Workshop Arduino PRO @Arduino DAY 2015</h2>\n<p>(2015-03-28 15:00-17:00 CET)</p>\n<p>Reference: <a href=\"http://www.eventbrite.it/e/biglietti-workshop-pro-arduino-day-2015-torino-16276959825\">http://www.eventbrite.it/e/biglietti-workshop-pro-arduino-day-2015-torino-16276959825</a></p>\n<blockquote>\n<p>Dettagli evento</p>\n<p>Scopri le basi della progettazione con Arduino!</p>\n<p>Una demo per scoprire Arduino Yùn e l&#39;IoT. con Arturo Guadalupi e Angelo Scialabba (Officine Arduino)</p>\n<p>Collega Arduino Yùn ai servizi web tramite temboo e crea la tua interfaccia web di controllo!\nLa demo inizierà alle 15:00, quindi ti consigliamo di arrivare 10 minuti prima e non dimenticare di portare con te il tuo laptop per mettere subito in pratica quanto appreso!</p>\n<p>Per ogni informazione, contattare <a href=\"mailto:arduinoday2015-it@arduino.cc\">mailto:arduinoday2015-it@arduino.cc</a></p>\n</blockquote>\n<h3 id=\"preparation\">Preparation</h3>\n<p>See <a href=\"https://github.com/gmacario/gmacario.github.io/blob/master/_posts/2015-03-27-preparing-my-yun-for-the-arduino-day.md\">my blog post</a>.</p>\n<h3 id=\"arduino-pro-workshop\">Arduino PRO workshop</h3>\n<p>The worshop took place in &quot;sala didattica&quot; of FabLab Torino.</p>\n<p>About 30 participants were preregisterd and brought their own laptop.</p>\n<p>Each participant was provided with the following kit, then walked through some exercises to get familiar with the Arduino YUN and connect it to the web.</p>\n<p>Kudos to the few instructors who were very helpful to resolve the few issues -- mainly because of each PC settings -- which some of the participants encountered during the workshop.</p>\n<h4 id=\"contents-of-the-tinkerkit-box\">Contents of the TinkerKit box</h4>\n<ul>\n<li>1 x Laser-cut wooden box</li>\n<li>1 x <a href=\"http://store.arduino.cc/product/A000008\">Arduino YUN</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/A000057\">Arduino Leonardo with Headers</a></li>\n<li>1 x <a href=\"TODO\">TinkerKit Sensor Shield</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T010117\">TinkerKit Yellow LED [10mm]</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T010116\">TinkerKit Green LED [10mm]</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T010114\">TinkerKit Red LED [5mm]</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T010113\">TinkerKit Yellow LED [5mm]</a></li>\n<li>2 x <a href=\"http://store.arduino.cc/product/T010112\">TinkerKit Green LED [5mm]</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T010110\">TinkerKit Power LED</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T010010\">TinkerKit Relay Module</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T000030\">TinkerKit Joystick</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T000150\">TinkerKit Linear Potentiometer</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T000180\">TinkerKit PushButton</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T000090\">TinkerKit LDR Sensor</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T000140\">TinkerKit Rotary Potentiometer</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T000200\">TinkerKit Thermistor Module</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T000190\">TinkerKit Tilt Sensor</a></li>\n<li>1 x <a href=\"http://store.arduino.cc/product/T020070\">TinkerKit Cable [50cm]</a> (3-pin jumper on both sides)</li>\n<li>1 x USB-A/MicroUSB cable l=1m</li>\n</ul>\n<p>Reference: <a href=\"https://www1.elfa.se/data1/wwwroot/assets/datasheets/K000001_eng_tds.pdf\">https://www1.elfa.se/data1/wwwroot/assets/datasheets/K000001_eng_tds.pdf</a></p>\n<h4 id=\"architecture-of-the-arduino-yun\">Architecture of the Arduino YUN</h4>\n<p>From <a href=\"http://arduino.cc/en/Main/ArduinoBoardYun\">http://arduino.cc/en/Main/ArduinoBoardYun</a></p>\n<p><img src=\"http://arduino.cc/en/uploads/Main/BridgeInShort.png\" alt=\"Arduino YUN Block Diagram\"></p>\n<h4 id=\"restore-yun-to-factory-settings\">Restore Yun to factory settings</h4>\n<p>Let us first upload a sketch to the ATmega to be able to debug the AR9331 side of the Arduino YUN.</p>\n<p>Start the Arduino IDE on your laptop - if you haven&#39;t installed yet, you may download it from <a href=\"http://arduino.cc/en/main/software\">http://arduino.cc/en/main/software</a>.</p>\n<p>Arduino:</p>\n<ul>\n<li>File &gt; Examples &gt; Bridge &gt; YunSerialTerminal</li>\n<li>Tools &gt; Board &gt; Arduino YUN</li>\n<li>Tools &gt; Port &gt; COMxx (Arduino YUN)</li>\n<li>File &gt; Upload</li>\n<li>Tools &gt; Serial Monitor</li>\n</ul>\n<p>Check settings</p>\n<ul>\n<li>Newline</li>\n<li>115200 baud</li>\n</ul>\n<p>Plug YUN, wait for the blue WLAN LED to blink</p>\n<p>Press the &quot;WiFi&quot; button for 30 seconds to restore factory image and settings.</p>\n<p>Console log:</p>\n<pre><code class=\"language-text\">U-Boot 1.1.4-g15f12ddd-dirty (Oct 14 2014 - 16:01:08)\n\nArduino Yun (ar9331) U-boot\n\nDRAM:  64 MB\nTop of RAM usable for U-Boot at: 84000000\nReserving 142k for U-Boot at: 83fdc000\nReserving 192k for malloc() at: 83fac000\nReserving 44 Bytes for Board Info at: 83fabfd4\nReserving 36 Bytes for Global Data at: 83fabfb0\nReserving 128k for boot params() at: 83f8bfb0\nStack Pointer at: 83f8bf98\nNow running in RAM - U-Boot at: 83fdc000\nFlash Manuf Id 0xef, DeviceId0 0x40, DeviceId1 0x18\nflash size 16777216, sector count = 256\nFlash: 16 MB\nUsing default environment\n\nIn:    serial\nOut:   serial\nErr:   serial\nNet:   ag7240_enet_initialize...\nNo valid address in Flash. Using fixed address\nNo valid address in Flash. Using fixed address\n: cfg1 0x5 cfg2 0x7114\neth0: 00:03:7f:09:0b:ad\neth0 up\n: cfg1 0xf cfg2 0x7214\neth1: 00:03:7f:09:0b:ad\nathrs26_reg_init_lan\nATHRS26: resetting s26\nATHRS26: s26 reset done\neth1 up\neth0, eth1\nautoboot in 4 seconds (type &#39;ard&#39; to enter u-boot console)...\n## Booting image at 9fea0000 ...\n   Image Name:   MIPS OpenWrt Linux-3.3.8\n   Created:      2014-10-14  14:18:52 UTC\n   Image Type:   MIPS Linux Kernel Image (lzma compressed)\n   Data Size:    1135978 Bytes =  1.1 MB\n   Load Address: 80060000\n   Entry Point:  80060000\n   Verifying Checksum at 0x9fea0040 ...OK\n   Uncompressing Kernel Image ... OK\nNo initrd\n## Transferring control to Linux (at address 80060000) ...\n## Giving linux memsize in bytes, 67108864\n\nStarting kernel ...\n\n[    0.000000] Linux version 3.3.8 (federico@smilzo) (gcc version 4.6.3 20120201 (prerelease) (Linaro GCC 4.6-2012.02) ) #1 Tue Oct 14 16:17:49 CEST 2014\n[    0.000000] bootconsole [early0] enabled\n[    0.000000] CPU revision is: 00019374 (MIPS 24Kc)\n[    0.000000] SoC: Atheros AR9330 rev 1\n[    0.000000] Clocks: CPU:400.000MHz, DDR:400.000MHz, AHB:200.000MHz, Ref:25.000MHz\n[    0.000000] Determined physical RAM map:\n[    0.000000]  memory: 04000000 @ 00000000 (usable)\n[    0.000000] Initrd not found or empty - disabling initrd\n[    0.000000] Zone PFN ranges:\n[    0.000000]   Normal   0x00000000 -&gt; 0x00004000\n[    0.000000] Movable zone start PFN for each node\n[    0.000000] Early memory PFN ranges\n[    0.000000]     0: 0x00000000 -&gt; 0x00004000\n[    0.000000] Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 16256\n[    0.000000] Kernel command line:  board=Yun console=ttyATH0,250000 mtdparts=spi0.0:256k(u-boot)ro,64k(u-boot-env)ro,14656k(rootfs),1280k(kernel),64k(nvram),64k(art),15936k@0x50000(firmware) rootfstype=squashfs,jffs2 noinitrd\n[    0.000000] PID hash table entries: 256 (order: -2, 1024 bytes)\n[    0.000000] Dentry cache hash table entries: 8192 (order: 3, 32768 bytes)\n[    0.000000] Inode-cache hash table entries: 4096 (order: 2, 16384 bytes)\n[    0.000000] Primary instruction cache 64kB, VIPT, 4-way, linesize 32 bytes.\n[    0.000000] Primary data cache 32kB, 4-way, VIPT, cache aliases, linesize 32 bytes\n[    0.000000] Writing ErrCtl register=00000000\n[    0.000000] Readback ErrCtl register=00000000\n[    0.000000] Memory: 61092k/65536k available (2441k kernel code, 4444k reserved, 626k data, 176k init, 0k highmem)\n[    0.000000] SLUB: Genslabs=9, HWalign=32, Order=0-3, MinObjects=0, CPUs=1, Nodes=1\n[    0.000000] NR_IRQS:51\n[    0.000000] Calibrating delay loop... 265.42 BogoMIPS (lpj=1327104)\n[    0.080000] pid_max: default: 32768 minimum: 301\n[    0.080000] Mount-cache hash table entries: 512\n[    0.080000] NET: Registered protocol family 16\n[    0.090000] gpiochip_add: registered GPIOs 0 to 29 on device: ath79\n[    0.090000] MIPS: machine is Arduino Yun\n[    0.530000] Setting DogStick2 GPIO\n[    0.550000] bio: create slab &lt;bio-0&gt; at 0\n[    0.550000] SCSI subsystem initialized\n[    0.560000] usbcore: registered new interface driver usbfs\n[    0.560000] usbcore: registered new interface driver hub\n[    0.560000] usbcore: registered new device driver usb\n[    0.570000] Switching to clocksource MIPS\n[    0.570000] NET: Registered protocol family 2\n[    0.570000] IP route cache hash table entries: 1024 (order: 0, 4096 bytes)\n[    0.570000] TCP established hash table entries: 2048 (order: 2, 16384 bytes)\n[    0.580000] TCP bind hash table entries: 2048 (order: 1, 8192 bytes)\n[    0.580000] TCP: Hash tables configured (established 2048 bind 2048)\n[    0.580000] TCP reno registered\n[    0.580000] UDP hash table entries: 256 (order: 0, 4096 bytes)\n[    0.590000] UDP-Lite hash table entries: 256 (order: 0, 4096 bytes)\n[    0.590000] NET: Registered protocol family 1\n[    0.610000] squashfs: version 4.0 (2009/01/31) Phillip Lougher\n[    0.610000] JFFS2 version 2.2 (NAND) (SUMMARY) (LZMA) (RTIME) (CMODE_PRIORITY) (c) 2001-2006 Red Hat, Inc.\n[    0.620000] msgmni has been set to 119\n[    0.620000] io scheduler noop registered\n[    0.620000] io scheduler deadline registered (default)\n[    0.630000] Serial: 8250/16550 driver, 1 ports, IRQ sharing disabled\n[    0.630000] ar933x-uart: ttyATH0 at MMIO 0x18020000 (irq = 11) is a AR933X UART\n[    0.630000] console [ttyATH0] enabled, bootconsole disabled\n[    0.630000] console [ttyATH0] enabled, bootconsole disabled\n[    0.640000] m25p80 spi0.0: found w25q128, expected m25p80\n[    0.640000] m25p80 spi0.0: w25q128 (16384 Kbytes)\n[    0.640000] 7 cmdlinepart partitions found on MTD device spi0.0\n[    0.650000] Creating 7 MTD partitions on &quot;spi0.0&quot;:\n[    0.650000] 0x000000000000-0x000000040000 : &quot;u-boot&quot;\n[    0.650000] 0x000000040000-0x000000050000 : &quot;u-boot-env&quot;\n[    0.660000] 0x000000050000-0x000000ea0000 : &quot;rootfs&quot;\n[    0.660000] mtd: partition &quot;rootfs&quot; set to be root filesystem\n[    0.660000] mtd: partition &quot;rootfs_data&quot; created automatically, ofs=7A0000, len=700000\n[    0.670000] 0x0000007a0000-0x000000ea0000 : &quot;rootfs_data&quot;\n[    0.670000] 0x000000ea0000-0x000000fe0000 : &quot;kernel&quot;\n[    0.670000] 0x000000fe0000-0x000000ff0000 : &quot;nvram&quot;\n[    0.680000] 0x000000ff0000-0x000001000000 : &quot;art&quot;\n[    0.680000] 0x000000050000-0x000000fe0000 : &quot;firmware&quot;\n[    0.700000] ag71xx_mdio: probed\n[    0.710000] eth0: Atheros AG71xx at 0xba000000, irq 5\n[    1.260000] eth0: Found an AR7240/AR9330 built-in switch\n[    2.290000] eth1: Atheros AG71xx at 0xb9000000, irq 4\n[    2.840000] ag71xx ag71xx.0: eth1: connected to PHY at ag71xx-mdio.1:04 [uid=004dd041, driver=Generic PHY]\n[    2.840000] ehci_hcd: USB 2.0 &#39;Enhanced&#39; Host Controller (EHCI) Driver\n[    2.840000] ehci-platform ehci-platform: Generic Platform EHCI Controller\n[    2.850000] ehci-platform ehci-platform: new USB bus registered, assigned bus number 1\n[    2.880000] ehci-platform ehci-platform: irq 3, io mem 0x1b000000\n[    2.900000] ehci-platform ehci-platform: USB 2.0 started, EHCI 1.00\n[    2.900000] usb usb1: New USB device found, idVendor=1d6b, idProduct=0002\n[    2.900000] usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=1\n[    2.900000] usb usb1: Product: Generic Platform EHCI Controller\n[    2.910000] usb usb1: Manufacturer: Linux 3.3.8 ehci_hcd\n[    2.910000] usb usb1: SerialNumber: ehci-platform\n[    2.910000] hub 1-0:1.0: USB hub found\n[    2.910000] hub 1-0:1.0: 1 port detected\n[    2.920000] Initializing USB Mass Storage driver...\n[    2.920000] usbcore: registered new interface driver usb-storage\n[    2.920000] USB Mass Storage support registered.\n[    2.920000] input: gpio-keys-polled as /devices/platform/gpio-keys-polled/input/input0\n[    2.930000] sdhci: Secure Digital Host Controller Interface driver\n[    2.930000] sdhci: Copyright(c) Pierre Ossman\n[    2.930000] usbcore: registered new interface driver ushc\n[    2.930000] TCP cubic registered\n[    2.940000] NET: Registered protocol family 17\n[    2.940000] 8021q: 802.1Q VLAN Support v1&gt;8\n[    2.950000] VFS: Mounted root (squashfs filesystem) readonly on device 31:2.\n[    2.950000] Freeing unused kernel memory: 176k freed\n[    3.290000] usb 1-1: new high-speed USB device number 2 using ehci-platform\n[    3.630000] usb 1-1: New USB device found, idVendor=058f, idProduct=6254\n[    3.630000] usb 1-1: New USB device strings: Mfr=0, Product=1, SerialNumber=0\n[    3.630000] usb 1-1: Product: USB2.0Hub\n[    3.700000] hub 1-1:1.0: USB hub found\n[    3.700000] hub 1-1:1.0: 4 ports detected\n[    4.110000] usb 1-1.4: new high-speed USB device number 3 using ehci-platform\n[    4.280000] usb 1-1.4: New USB device found, idVendor=058f, idProduct=6366\n[    4.280000] usb 1-1.4: New USB device strings: Mfr=1, Product=2, SerialNumber=3\n[    4.280000] usb 1-1.4: Product: Mass Storage Device\n[    4.280000] usb 1-1.4: Manufacturer: Generic\n[    4.290000] usb 1-1.4: SerialNumber: 058F0O1111B1\n[    4.300000] scsi0 : usb-storage 1-1.4:1.0\n[    4.980000] Error: Driver &#39;gpio-keys-polled&#39; is already registered, aborting...\n[    5.300000] scsi 0:0:0:0: Direct-Access     Multi    Flash Reader     1.00 PQ: 0 ANSI: 0\n- preinit -\nPress the [f] key and hit [enter] to enter failsafe mode\n- regular preinit -\n[    9.540000] JFFS2 notice: (489) jffs2_build_xattr_subsystem: complete building xattr subsystem, 2 of xdatum (0 unchecked, 2 orphan) and 24 of xref (0 dead, 24 orphan) found.\n[   10.870000] sd 0:0:0:0: [sda] Attached SCSI removable disk\nswitching to jffs2\n- init -\n[   38.190000] Loading modules backported from Linux version master-2014-05-22-0-gf2032ea\n[   38.190000] Backport generated by backports.git backports-20140320-37-g5c33da0\n[   38.370000] cfg80211: Calling CRDA to update world regulatory domain\n[   38.370000] cfg80211: World regulatory domain updated:\n[   38.370000] cfg80211:  DFS Master region: unset\n[   38.370000] cfg80211:   (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp), (dfs_cac_time)\n[   38.380000] cfg80211:   (2402000 KHz - 2472000 KHz @ 40000 KHz), (N/A, 2000 mBm), (N/A)\n[   38.380000] cfg80211:   (2457000 KHz - 2482000 KHz @ 40000 KHz), (N/A, 2000 mBm), (N/A)\n[   38.380000] cfg80211:   (2474000 KHz - 2494000 KHz @ 20000 KHz), (N/A, 2000 mBm), (N/A)\n[   38.390000] cfg80211:   (5170000 KHz - 5250000 KHz @ 80000 KHz), (N/A, 2000 mBm), (N/A)\n[   38.390000] cfg80211:   (5735000 KHz - 5835000 KHz @ 80000 KHz), (N/A, 2000 mBm), (N/A)\n[   38.390000] cfg80211:   (57240000 KHz - 63720000 KHz @ 2160000 KHz), (N/A, 0 mBm), (N/A)\n[   39.350000] ieee80211 phy0: Atheros AR9330 Rev:1 mem=0xb8100000, irq=2\n[   39.360000] cfg80211: Calling CRDA for country: US\n[   39.360000] cfg80211: Regulatory domain changed to country: US\n[   39.360000] cfg80211:  DFS Master region: FCC\n[   39.360000] cfg80211:   (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp), (dfs_cac_time)\n[   39.370000] cfg80211:   (2402000 KHz - 2472000 KHz @ 40000 KHz), (N/A, 3000 mBm), (N/A)\n[   39.370000] cfg80211:   (5170000 KHz - 5250000 KHz @ 80000 KHz), (N/A, 1700 mBm), (N/A)\n[   39.370000] cfg80211:   (5250000 KHz - 5330000 KHz @ 80000 KHz), (N/A, 2300 mBm), (0 s)\n[   39.380000] cfg80211:   (5735000 KHz - 5835000 KHz @ 80000 KHz), (N/A, 3000 mBm), (N/A)\n[   39.380000] cfg80211:   (57240000 KHz - 63720000 KHz @ 2160000 KHz), (N/A, 4000 mBm), (N/A)\n[   39.800000] NTFS driver 2.1.30 [Flags: R/O MODULE].\n[   39.850000] Error: Driver &#39;gpio-keys-polled&#39; is already registered, aborting...\n[   39.870000] loop: module loaded\n[   40.010000] PPP generic driver version 2.4.2\n[   40.060000] ip_tables: (C) 2000-2006 Netfilter Core Team\n[   40.180000] NET: Registered protocol family 24\n[   40.210000] nf_conntrack version 0.5.0 (957 buckets, 3828 max)\n[   40.660000] i2c /dev entries driver\n[   40.690000] Linux video capture interface: v2.00\n[   40.810000] fuse init (API version 7.18)\n\nPlease press Enter to activate this console.\n\n\nBusyBox v1.19.4 (2014-10-14 16:01:45 CEST) built-in shell (ash)\nEnter &#39;help&#39; for a list of built-in commands.\n\n  _______                     ________        __\n |       |.-----.-----.-----.|  |  |  |.----.|  |_\n |   -   ||  _  |  -__|     ||  |  |  ||   _||   _|\n |_______||   __|_____|__|__||________||__|  |____|\n          |__| W I R E L E S S   F R E E D O M\n -----------------------------------------------------\n\n\nroot@Arduino:/#\n</code></pre>\n<p>Verify default networking</p>\n<pre><code class=\"language-text\">root@Arduino:/# ifconfig -a\neth0      Link encap:Ethernet  HWaddr 90:A2:DA:F0:1B:D4  \n          BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n          Interrupt:5\n\neth1      Link encap:Ethernet  HWaddr 90:A2:DA:F8:1B:D4  \n          UP BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n          Interrupt:4\n\nlo        Link encap:Local Loopback  \n          inet addr:127.0.0.1  Mask:255.0.0.0\n          UP LOOPBACK RUNNING  MTU:16436  Metric:1\n          RX packets:336 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:336 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0\n          RX bytes:22848 (22.3 KiB)  TX bytes:22848 (22.3 KiB)\n\nwlan0     Link encap:Ethernet  HWaddr 90:A2:DA:F0:1B:D4  \n          inet addr:192.168.240.1  Bcast:192.168.240.255  Mask:255.255.255.0\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:16 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 B)  TX bytes:3197 (3.1 KiB)\n\nroot@Arduino:/#\n</code></pre>\n<p>Look at &quot;HWAddr&quot; value for wlan0.</p>\n<p>When reset from factory, the YUN creates an access point named after the wlan0 MAC address.</p>\n<p>Connect to WiFi Network <code>Arduino YUN-xxxxxxxxxxxx</code> (in our case, this is <code>Arduino YUN-90A2DAF01BD4</code>).</p>\n<p>Once you are successfully connected to the YUN, browse the contents of <a href=\"http://arduino.local\">http://arduino.local</a> to access the YUN configuration page.</p>\n<p>Here I had some troubles, which I debugged as follows.</p>\n<p>As my laptop was running MS Windows 7 and I had Cygwin installed, I used the following commands</p>\n<pre><code class=\"language-sh\">$ ipconfig\n$ ping 192.168.240.1\n$ ping arduino.local\n$ ssh root@arduino.local\n</code></pre>\n<p>Apparently in my case I was unable to get an IP address in the 192.168.240.x range from the YUN.</p>\n<p><strong>TIP</strong>: Set a static IP for your PC if you cannot get an IP address from the YUN.</p>\n<p>Open Network and Sharing Center</p>\n<ul>\n<li>Select connection: &quot;Wireless Network Connection (Arduino Yun-xxxxxx)&quot; &gt; Properties</li>\n<li>Select &quot;Internet Protocol Version 4 (TCP/IPv4)&quot; &gt; Properties<ul>\n<li>Use the following IP address: TODO</li>\n<li>Use the following DNS server addresses<ul>\n<li>Preferred DNS server: 8.8.8.8</li>\n<li>Alternate DNS server: 8.8.4.4</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Browse <a href=\"http://192.168.240.1\">http://192.168.240.1</a></p>\n<ul>\n<li>Password: <code>xxxx</code> (default: <code>arduino</code>)</li>\n</ul>\n<blockquote>\n<p>WELCOME TO <strong>ARDUINO</strong>, YOUR ARDUINO YUN\n...</p>\n<p>This Yun runs a version of OpenWrt-Yun built on oct 14,2014</p>\n</blockquote>\n<p>Select &quot;CONFIGURE&quot;</p>\n<blockquote>\n<p>YUN BOARD CONFIGURATION</p>\n</blockquote>\n<ul>\n<li>YUN NAME: <code>AdayGmacario</code></li>\n<li>Password: <code>sesam2015</code></li>\n<li>Timezone: Europe/Rome</li>\n</ul>\n<blockquote>\n<p>WIRELESS PARAMETERS</p>\n</blockquote>\n<ul>\n<li>Configure a wireless network: Yes</li>\n<li>WIRELESS NAME: <code>FABLAB_TORINO</code> (WPA2, quality 74%)</li>\n<li>Security: WPA2</li>\n<li>Password: <code>xxxx</code></li>\n</ul>\n<p>REST API ACCESS</p>\n<ul>\n<li>WITH PASSWORD</li>\n</ul>\n<p>Double check, then select &quot;CONFIGURE &amp; RESTART&quot;</p>\n<p>Watch Serial Monitor, the AR9331 will restart.</p>\n<p>Reconnect your laptop to WiFi SSID <code>FABLAB_TORINO</code></p>\n<p>Make sure you reset your IPv4 properties to:</p>\n<ul>\n<li>Obtain an IP address automatically</li>\n<li>Obtain DNS server address automatically</li>\n</ul>\n<p>Now access <a href=\"http://adaygmacario.local\">http://adaygmacario.local</a></p>\n<ul>\n<li>Password: (the one you chose before)</li>\n</ul>\n<p>From the serial terminal</p>\n<pre><code class=\"language-text\">root@AdayGmacario:/# ifconfig\neth1      Link encap:Ethernet  HWaddr 90:A2:DA:F8:1B:D4  \n          UP BROADCAST MULTICAST  MTU:1500  Metric:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\n          Interrupt:4\n\nlo        Link encap:Local Loopback  \n          inet addr:127.0.0.1  Mask:255.0.0.0\n          UP LOOPBACK RUNNING  MTU:16436  Metric:1\n          RX packets:17 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:17 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:0\n          RX bytes:1661 (1.6 KiB)  TX bytes:1661 (1.6 KiB)\n\nwlan0     Link encap:Ethernet  HWaddr 90:A2:DA:F0:1B:D4  \n          inet addr:192.168.1.246  Bcast:192.168.1.255  Mask:255.255.255.0\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:31543 errors:0 dropped:5586 overruns:0 frame:0\n          TX packets:563 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000\n          RX bytes:4217384 (4.0 MiB)  TX bytes:172166 (168.1 KiB)\n\nroot@AdayGmacario:/#\n</code></pre>\n<p>Look at field &quot;inet addr&quot; for interface &quot;wlan0&quot;.</p>\n<p>In my case the new IP address of my YUN (assigned by the WiFi access point which both my YUN and my laptop are now connected) is 192.168.1.246.</p>\n<h3 id=\"how-control-io-pin-from-the-web\">How control I/O pin from the web</h3>\n<p>The Arduino YUN features a built-in webserver running on the AR9331 (Linino) which communicates through a bridge with the ATmega 32u4 (Arduino).</p>\n<p>Example: see <a href=\"http://arduino.cc/en/Tutorial/Bridge\">http://arduino.cc/en/Tutorial/Bridge</a></p>\n<p>Arduino:</p>\n<ul>\n<li>File &gt; Examples &gt; Bridge &gt; Bridge</li>\n</ul>\n<p>Take the TinkerKit shield (take it off from the Arduino UNO)</p>\n<p>Connect a LED to TinkerKit output 05 (digital output 3)</p>\n<p>Browse <a href=\"http://adaygmacario.local/\">http://adaygmacario.local/</a></p>\n<p>Choose REST API ACCESS: OPEN (to avoid being asked for password every time)</p>\n<p>Test:</p>\n<ul>\n<li>Turn off LED on TinkerKit Output 05<ul>\n<li>Command: <a href=\"http://adaygmacario.local/arduino/digital/3/1\">http://adaygmacario.local/arduino/digital/3/1</a></li>\n<li>Result: <code>Pin D3 set to 1</code></li>\n</ul>\n</li>\n<li>Turn off LED on TinkerKit Output 05<ul>\n<li>Command: <a href=\"http://adaygmacario.local/arduino/digital/3/0\">http://adaygmacario.local/arduino/digital/3/0</a></li>\n<li>Result: <code>Pin D3 set to 0</code></li>\n</ul>\n</li>\n<li>Read state of TinkerKit Output 05<ul>\n<li>Command: <a href=\"http://adaygmacario.local/arduino/digital/3\">http://adaygmacario.local/arduino/digital/3</a></li>\n<li>Result: <code>Pin D3 set to 0</code></li>\n</ul>\n</li>\n</ul>\n<p>Connect the linear potentiometer to TinkerKit I0</p>\n<p>Read <a href=\"http://adaygmacario.local/arduino/analog/0\">http://adaygmacario.local/arduino/analog/0</a></p>\n<ul>\n<li>Min read: 10</li>\n<li>Max read: 855</li>\n</ul>\n<p>Connect the green LED to TinkerKit O5</p>\n<p>Change the intensity:</p>\n<ul>\n<li>Max: <a href=\"http://adaygmacario.local/arduino/analog/3/255\">http://adaygmacario.local/arduino/analog/3/255</a></li>\n<li>50%: <a href=\"http://adaygmacario.local/arduino/analog/3/128\">http://adaygmacario.local/arduino/analog/3/128</a></li>\n<li>25%: <a href=\"http://adaygmacario.local/arduino/analog/3/64\">http://adaygmacario.local/arduino/analog/3/64</a></li>\n<li>12%: <a href=\"http://adaygmacario.local/arduino/analog/3/32\">http://adaygmacario.local/arduino/analog/3/32</a></li>\n<li>Off: <a href=\"http://adaygmacario.local/arduino/analog/3/0\">http://adaygmacario.local/arduino/analog/3/0</a></li>\n</ul>\n<!-- markdown-link-check-enable -->\n<!-- EOF -->\n"},"config":{"title":"gmacario.github.io","description":"Gianpaolo Macario's public rants","social":{"github":{"name":"gmacario","link":"https://github.com/gmacario"},"twitter":{"name":"gpmacario","link":"https://www.twitter.com/gpmacario"}}}},"__N_SSG":true}