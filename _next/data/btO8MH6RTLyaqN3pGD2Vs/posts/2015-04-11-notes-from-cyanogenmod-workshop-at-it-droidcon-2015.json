{"pageProps":{"post":{"title":"Notes from CyanogenMod Workshop at IT Droidcon 2015","content":"<!-- markdown-link-check-disable -->\n\n<p>Here are a few notes which I took when attending the <a href=\"http://it.droidcon.com/2015/sessions/cyanogen-workshop/\">Cyanogen Workshop</a> during the <a href=\"http://it.droidcon.com/2015/\">IT Droidcon 2015</a> which took place in Torino on 2015-04-10.</p>\n<p>The workshop was led by <a href=\"https://twitter.com/ciwrl\">Abhisek Devkota</a>, Senior Engineering and Community Manager at Cyanogen Inc., who was extremely good in driving the workshop forward and answered a lot of questions from the audience.</p>\n<h3 id=\"preparing-the-development-environment\">Preparing the development environment</h3>\n<p>Due to some issues when creating the VPS instances that were going to the participants I instead used one machine which I had already available. That had the additional benefit to make sure I could reproduce all the steps - including provisioning the build environment!</p>\n<p>I had a Ubuntu 14.04 64-bit server available via SSH with Docker installed.</p>\n<p>After logging in to the server, I cloned the &quot;docker-cyanogenmod&quot; project</p>\n<pre><code>$ git clone https://github.com/gmacario/docker-cyanogenmod.git -b test-droidcon\n</code></pre>\n<p>Note: the &quot;test-droidcon&quot; branch on my fork is used in order to install exactly the packages which Abhisek had installed in his VPS instances.</p>\n<p>Then run the following commands to create a Docker container with all the needed software automagically installed:</p>\n<pre><code>$ cd docker-cyanogenmod\n$ ./run.sh\n</code></pre>\n<p>The first time it will take a few minutes to create the Docker image and start the container, but subsequent runs will be much faster!</p>\n<p>As a result I eventually got a shell inside the container:</p>\n<pre><code>cmbuild@c8226ae3ff79:~/android$ ls -la\ntotal 8\ndrwxrwxr-x 2 cmbuild cmbuild 4096 Apr 10 16:53 .\ndrwxr-xr-x 7 cmbuild cmbuild 4096 Apr 10 17:10 ..\ncmbuild@c8226ae3ff79:~/android$ free\n             total       used       free     shared    buffers     cached\nMem:      16433600   15763396     670204      13960     966884   12194076\n-/+ buffers/cache:    2602436   13831164\nSwap:     16775164      78012   16697152\ncmbuild@c8226ae3ff79:~/android$ df -h\nFilesystem                                              Size  Used Avail Use% Mounted on\nrootfs                                                  119G   81G   33G  72% /\nnone                                                    119G   81G   33G  72% /\nshm                                                      64M     0   64M   0% /dev/shm\n/dev/disk/by-uuid/b5696056-ded4-483a-be75-d0ac8afac2cb  119G   81G   33G  72% /etc/hosts\n/dev/sda1                                               1.8T  922G  820G  53% /srv/ccache\ncmbuild@c8226ae3ff79:~/android$\n</code></pre>\n<p>Wow, plenty of resources to use! Let&#39;s move on...</p>\n<h3 id=\"installing-repo\">Installing Repo</h3>\n<p>Logged as cmbuild@container:</p>\n<pre><code>$ mkdir -p ~/bin\n$ curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo\n$ chmod a+x ~/bin/repo\n</code></pre>\n<h3 id=\"installing-the-android-sdk\">Installing the Android SDK</h3>\n<p>Download the latest version of the Android SDK for Linux (24.1.2 as of 2015-04-10)</p>\n<pre><code>$ mkdir -p ~/sdk\n$ cd ~/sdk\n$ curl -O http://dl.google.com/android/android-sdk_r24.1.2-linux.tgz\n</code></pre>\n<p>If the previous fails for whatever reasons (i.e. you are in a location which blocks access to Google)</p>\n<pre><code>$ curl -O https://dl.dropboxusercontent.com/u/2834459/android-sdk_r24.1.2-linux.tgz\n</code></pre>\n<p>After extracting the file your may remove the install tarball to save space:</p>\n<pre><code>$ tar zxvf android-sdk_r24.1.2-linux.tgz\n$ rm android-sdk_r24.1.2-linux.tgz\n</code></pre>\n<p>Update <code>~/.bashrc</code> with the following definitions:</p>\n<pre><code>$ cat &lt;&lt;END &gt;&gt;~/.bashrc\nexport ANDROID_HOME=&quot;\\$HOME/sdk/android-sdk-linux&quot;\nexport PATH=&quot;\\$ANDROID_HOME/tools:\\$ANDROID_HOME/platform-tools:\\$PATH&quot;\nEND\n</code></pre>\n<p>Then logout from the container and launch <code>./run.sh</code> again to make sure\nthe environment variables are set correctly.</p>\n<h3 id=\"using-the-android-sdk\">Using the Android SDK</h3>\n<p>You should have the <code>android</code> command in PATH, therefore you may do the following:</p>\n<p>Get help</p>\n<pre><code>$ android --help\n</code></pre>\n<p>List remote SDK repository</p>\n<pre><code>$ android list sdk\n</code></pre>\n<p>Update the SDK specified</p>\n<pre><code>$ android update sdk --no-ui --filter 1,2,5\n</code></pre>\n<p>You must read and accept the license by typing &quot;y&quot;, then the download will start.</p>\n<h3 id=\"git-config-and-repo-init\">Git config and repo init</h3>\n<pre><code>$ git config --global user.email &quot;email@example.com&quot;\n$ git config --global user.name &quot;First Lastname&quot;\n$ git config --global color.ui auto\n</code></pre>\n<p>Init repo</p>\n<p>In our example we want to configure for CyanogenMod 12.0</p>\n<pre><code>$ mkdir -p ~/android/cm12/\n$ cd ~/android/cm12/\n$ repo init -u https://github.com/CyanogenMod/android.git -b cm-12.0\n</code></pre>\n<p>You may also repo init AOSP pointing to the following URL instead: <a href=\"https://android.googlesource.com/platform/manifest\">https://android.googlesource.com/platform/manifest</a></p>\n<p>There is a GitHub mirror (not always up-to-date) of AOSP at <a href=\"https://github.com/android\">https://github.com/android</a></p>\n<h3 id=\"syncing-the-source-code\">Syncing the source code</h3>\n<!-- Start: 2015-04-10 20:53 CEST -->\n\n<pre><code>$ repo sync â€“j16\n</code></pre>\n<p>(and a lot of waiting)</p>\n<!-- End: 2015-04-10 22:45 CEST -->\n\n<p>Result:</p>\n<pre><code>cmbuild@c8226ae3ff79:~/android/cm12$ ls -la\ntotal 116\ndrwxrwxr-x  28 cmbuild cmbuild 4096 Apr 10 20:41 .\ndrwxrwxr-x   3 cmbuild cmbuild 4096 Apr 10 18:48 ..\ndrwxrwxr-x   7 cmbuild cmbuild 4096 Apr 10 20:29 .repo\n-r--r--r--   1 cmbuild cmbuild   87 Apr 10 20:29 Makefile\ndrwxrwxr-x   3 cmbuild cmbuild 4096 Apr 10 20:29 abi\ndrwxrwxr-x   3 cmbuild cmbuild 4096 Apr 10 20:29 android\ndrwxrwxr-x  14 cmbuild cmbuild 4096 Apr 10 20:29 art\ndrwxrwxr-x  10 cmbuild cmbuild 4096 Apr 10 20:29 bionic\ndrwxrwxr-x   3 cmbuild cmbuild 4096 Apr 10 20:29 bootable\ndrwxrwxr-x   7 cmbuild cmbuild 4096 Apr 10 20:29 build\ndrwxrwxr-x  12 cmbuild cmbuild 4096 Apr 10 20:29 cts\ndrwxrwxr-x  13 cmbuild cmbuild 4096 Apr 10 20:29 dalvik\ndrwxrwxr-x   6 cmbuild cmbuild 4096 Apr 10 20:29 developers\ndrwxrwxr-x  20 cmbuild cmbuild 4096 Apr 10 20:29 development\ndrwxrwxr-x   7 cmbuild cmbuild 4096 Apr 10 20:29 device\ndrwxrwxr-x   3 cmbuild cmbuild 4096 Apr 10 20:29 docs\ndrwxrwxr-x 237 cmbuild cmbuild 4096 Apr 10 20:33 external\ndrwxrwxr-x  18 cmbuild cmbuild 4096 Apr 10 20:34 frameworks\ndrwxrwxr-x  15 cmbuild cmbuild 4096 Apr 10 20:34 hardware\ndrwxrwxr-x  16 cmbuild cmbuild 4096 Apr 10 20:34 libcore\ndrwxrwxr-x   5 cmbuild cmbuild 4096 Apr 10 20:34 libnativehelper\ndrwxrwxr-x   8 cmbuild cmbuild 4096 Apr 10 20:35 ndk\ndrwxrwxr-x   9 cmbuild cmbuild 4096 Apr 10 20:36 packages\ndrwxrwxr-x   6 cmbuild cmbuild 4096 Apr 10 20:36 pdk\ndrwxrwxr-x  16 cmbuild cmbuild 4096 Apr 10 20:40 prebuilts\ndrwxrwxr-x  27 cmbuild cmbuild 4096 Apr 10 20:40 sdk\ndrwxrwxr-x  10 cmbuild cmbuild 4096 Apr 10 20:40 system\ndrwxrwxr-x   3 cmbuild cmbuild 4096 Apr 10 20:40 tools\ndrwxrwxr-x   4 cmbuild cmbuild 4096 Apr 10 20:41 vendor\ncmbuild@c8226ae3ff79:~/android/cm12$\n</code></pre>\n<p>Disk usage:</p>\n<pre><code>cmbuild@c8226ae3ff79:~/android/cm12$ du -sh\n29G     .\ncmbuild@c8226ae3ff79:~/android/cm12$\n</code></pre>\n<h3 id=\"choose-your-device\">Choose your device</h3>\n<p>Source the <code>envsetup.sh</code> script to setup build environment</p>\n<pre><code>$ source build/envsetup.sh\n</code></pre>\n<p>You need to choose your device. CM 12 has 107 targets so far.\nSee <a href=\"https://github.com/CyanogenMod/hudson/blob/master/cm-build-targets\">https://github.com/CyanogenMod/hudson/blob/master/cm-build-targets</a></p>\n<ul>\n<li>Samsung Galaxy SII (i9100) ==&gt; Only cm11</li>\n<li>Emulated hardware (TBV whether they work with Lollypop, at least they worked with KitKat):<ul>\n<li>Goldfish</li>\n<li>Standard x86 emulator</li>\n<li>(???) MIPS emulator</li>\n</ul>\n</li>\n<li>One working device for CM12 is hammerhead (Nexus 5)</li>\n</ul>\n<p>You need to use the <code>breakfast</code> command.</p>\n<p>The name of the command is a pun at the <code>lunch</code> command from AOSP, since this is more efficient and avoids fetching unneccessary repositories as <code>lunch</code> did.</p>\n<p>If you invoke the <code>breakfast</code> command without options you will get be requested which device to build for:</p>\n<pre><code>cmbuild@c8226ae3ff79:~/android/cm12$ breakfast\nincluding vendor/cm/vendorsetup.sh\n\nYou&#39;re building on Linux\n\nBreakfast menu... pick a combo:\n 1. full-eng                             55. cm_m8-userdebug\n 2. cm_a5-userdebug                      56. cm_mako-userdebug\n 3. cm_acclaim-userdebug                 57. cm_manta-userdebug\n 4. cm_amami-userdebug                   58. cm_maserati-userdebug\n 5. cm_bacon-userdebug                   59. cm_mb886-userdebug\n 6. cm_castor-userdebug                  60. cm_memul-userdebug\n 7. cm_castor_windy-userdebug            61. cm_mint-userdebug\n 8. cm_condor-userdebug                  62. cm_mondrianwifi-userdebug\n 9. cm_d800-userdebug                    63. cm_n3-userdebug\n 10. cm_d801-userdebug                   64. cm_n5110-userdebug\n 11. cm_d802-userdebug                   65. cm_nicki-userdebug\n 12. cm_d850-userdebug                   66. cm_obake-userdebug\n 13. cm_d851-userdebug                   67. cm_peregrine-userdebug\n 14. cm_d852-userdebug                   68. cm_picassowifi-userdebug\n 15. cm_d855-userdebug                   69. cm_pollux-userdebug\n 16. cm_deb-userdebug                    70. cm_pollux_windy-userdebug\n 17. cm_dlx-userdebug                    71. cm_quark-userdebug\n 18. cm_e970-userdebug                   72. cm_scorpion-userdebug\n 19. cm_e975-userdebug                   73. cm_scorpion_windy-userdebug\n 20. cm_e980-userdebug                   74. cm_serrano3gxx-userdebug\n 21. cm_evita-userdebug                  75. cm_serranoltexx-userdebug\n 22. cm_falcon-userdebug                 76. cm_shamu-userdebug\n 23. cm_find5-userdebug                  77. cm_sirius-userdebug\n 24. cm_find7-userdebug                  78. cm_spyder-userdebug\n 25. cm_find7s-userdebug                 79. cm_superior-userdebug\n 26. cm_flo-userdebug                    80. cm_t0lte-userdebug\n 27. cm_flounder-userdebug               81. cm_t6-userdebug\n 28. cm_ghost-userdebug                  82. cm_t6spr-userdebug\n 29. cm_grouper-userdebug                83. cm_t6vzw-userdebug\n 30. cm_hammerhead-userdebug             84. cm_taoshan-userdebug\n 31. cm_hammerheadcaf-userdebug          85. cm_targa-userdebug\n 32. cm_hlte-userdebug                   86. cm_tf300t-userdebug\n 33. cm_hltespr-userdebug                87. cm_tilapia-userdebug\n 34. cm_hltetmo-userdebug                88. cm_titan-userdebug\n 35. cm_honami-userdebug                 89. cm_togari-userdebug\n 36. cm_i605-userdebug                   90. cm_togari_gpe-userdebug\n 37. cm_i925-userdebug                   91. cm_trltespr-userdebug\n 38. cm_jactivelte-userdebug             92. cm_trltetmo-userdebug\n 39. cm_jewel-userdebug                  93. cm_trlteusc-userdebug\n 40. cm_jflteatt-userdebug               94. cm_trltexx-userdebug\n 41. cm_jfltespr-userdebug               95. cm_tsubasa-userdebug\n 42. cm_jfltetmo-userdebug               96. cm_umts_spyder-userdebug\n 43. cm_jfltevzw-userdebug               97. cm_v500-userdebug\n 44. cm_jfltexx-userdebug                98. cm_victara-userdebug\n 45. cm_klimtwifi-userdebug              99. cm_ville-userdebug\n 46. cm_klte-userdebug                   100. cm_vs985-userdebug\n 47. cm_kltespr-userdebug                101. cm_xt897-userdebug\n 48. cm_ks01lte-userdebug                102. cm_xt907-userdebug\n 49. cm_l900-userdebug                   103. cm_xt925-userdebug\n 50. cm_ls970-userdebug                  104. cm_xt925_jbbl-userdebug\n 51. cm_ls980-userdebug                  105. cm_xt926-userdebug\n 52. cm_m7-userdebug                     106. cm_z3-userdebug\n 53. cm_m7spr-userdebug                  107. cm_z3c-userdebug\n 54. cm_m7vzw-userdebug\n... and don&#39;t forget the bacon!\n\nWhich would you like? [aosp_arm-eng]\n</code></pre>\n<p>Alternatively you may specify the combo directly as a parameter:</p>\n<pre><code>$ breakfast hammerhead\n</code></pre>\n<p>This causes breakfast to call <a href=\"https://github.com/CyanogenMod/android_build/blob/cm-12.0/tools/roomservice.py\"><code>roomservice.py</code></a> to create <code>.repo/local_manifests/roomservice.xml</code>, then will fetch the additional repositories specific for your device.</p>\n<p>Result:</p>\n<pre><code>...\nFetching projects:  50% (1/2)  From https://github.com/CyanogenMod/android_kernel_lge_hammerhead\n * [new branch]      cm-12.0    -&gt; github/cm-12.0\nFetching projects: 100% (2/2), done.\nChecking out files: 100% (41864/41864), done.\n\nLooking for dependencies\nDependencies file not found, bailing out.\nLooking for dependencies\nDependencies file not found, bailing out.\nDone\n\n============================================\nPLATFORM_VERSION_CODENAME=REL\nPLATFORM_VERSION=5.0.2\nCM_VERSION=12-20150410-UNOFFICIAL-hammerhead\nTARGET_PRODUCT=cm_hammerhead\nTARGET_BUILD_VARIANT=userdebug\nTARGET_BUILD_TYPE=release\nTARGET_BUILD_APPS=\nTARGET_ARCH=arm\nTARGET_ARCH_VARIANT=armv7-a-neon\nTARGET_CPU_VARIANT=krait\nTARGET_2ND_ARCH=\nTARGET_2ND_ARCH_VARIANT=\nTARGET_2ND_CPU_VARIANT=\nHOST_ARCH=x86_64\nHOST_OS=linux\nHOST_OS_EXTRA=Linux-3.13.0-46-generic-x86_64-with-Ubuntu-14.04-trusty\nHOST_BUILD_TYPE=release\nBUILD_ID=LRX22G\nOUT_DIR=/home/cmbuild/android/cm12/out\n============================================\n\ncmbuild@c8226ae3ff79:~/android/cm12$\n</code></pre>\n<h3 id=\"get-the-proprietary-stuff\">Get the proprietary stuff</h3>\n<p>Look inside the device directory</p>\n<pre><code>$ croot\n$ cd device/lge/hammerhead\n</code></pre>\n<p><code>extract-files.sh</code> is a simple script to process the binary blob copying the xxx - distribution becomes a little bit sketch.</p>\n<p>Alternatively you may create a file under <code>.repo/local_manifests</code> to fetch the proprietary stuff from your private repositories:</p>\n<!--\nWe obviously have a problem, guys are working on remote servers\nin Amsterdam. So for purely educational purposes a separate organization\n\nSee <https://github.com/Themuppets>\nExample: proprietary_vendor_htc\n\nAnother is <https://github.com/donkeycoyote>\n\n<http://www.replicant.us> is trying to address the problem differently.\nThey are actually trying to recreate one by one the working binaries\nfrom sources.\n-->\n\n<h3 id=\"invoke-brunch\">Invoke brunch</h3>\n<!-- Start: 2015-04-11 00:02 CEST -->\n\n<pre><code>$ croot\n$ brunch hammerhead\n</code></pre>\n<p>Result:</p>\n<pre><code>cmbuild@c8226ae3ff79:~/android/cm12$ brunch hammerhead\nincluding vendor/cm/vendorsetup.sh\nLooking for dependencies\n\n============================================\nPLATFORM_VERSION_CODENAME=REL\nPLATFORM_VERSION=5.0.2\nCM_VERSION=12-20150410-UNOFFICIAL-hammerhead\nTARGET_PRODUCT=cm_hammerhead\nTARGET_BUILD_VARIANT=userdebug\nTARGET_BUILD_TYPE=release\nTARGET_BUILD_APPS=\nTARGET_ARCH=arm\nTARGET_ARCH_VARIANT=armv7-a-neon\nTARGET_CPU_VARIANT=krait\nTARGET_2ND_ARCH=\nTARGET_2ND_ARCH_VARIANT=\nTARGET_2ND_CPU_VARIANT=\nHOST_ARCH=x86_64\nHOST_OS=linux\nHOST_OS_EXTRA=Linux-3.13.0-46-generic-x86_64-with-Ubuntu-14.04-trusty\nHOST_BUILD_TYPE=release\nBUILD_ID=LRX22G\nOUT_DIR=/home/cmbuild/android/cm12/out\n============================================\n\n...\nloaded device-specific extensions from /tmp/targetfiles-LWkAIq/META/releasetools.py\nusing prebuilt recovery.img from IMAGES...\nusing system.img from target-files\nTotal of 262144 4096-byte output blocks in 1531 input chunks.\nGenerating digraph...\nFinding vertex sequence...\nRemoving backward edges...\n  0/0 dependencies (0.00%) were violated; 0 source blocks removed.\nReticulating splines...\nusing prebuilt boot.img from IMAGES...\n   boot size (8880128) is 38.49% of limit (23068672)\nno bootloader.img in target_files; skipping install\nno radio.img in target_files; skipping install\n  running:  openssl pkcs8 -in build/target/product/security/testkey.pk8 -inform DER -nocrypt\n  running:  java -Xmx2048m -jar /home/cmbuild/android/cm12/out/host/linux-x86/framework/signapk.jar -w build/target/product/security/testkey.x509.pem build/target/product/security/testkey.pk8 /tmp/tmp0iiLTP /home/cmbuild/android/cm12/out/target/product/hammerhead/cm_hammerhead-ota-6eade6066f.zip\ndone.\nPackage Complete: /home/cmbuild/android/cm12/out/target/product/hammerhead/cm-12-20150410-UNOFFICIAL-hammerhead.zip\ncmbuild@c8226ae3ff79:~/android/cm12$\n</code></pre>\n<!-- End: TODO -->\n\n<h3 id=\"inspecting-build-results\">Inspecting build results</h3>\n<p>Inspecting contents of output directory:</p>\n<pre><code>cmbuild@c8226ae3ff79:~/android/cm12$ ls -la out/target/product/hammerhead/\ntotal 1069396\ndrwxrwxr-x 12 cmbuild cmbuild      4096 Apr 11 00:07 .\ndrwxrwxr-x  3 cmbuild cmbuild      4096 Apr 10 22:01 ..\n-rw-rw-r--  1 cmbuild cmbuild        59 Apr 10 22:05 android-info.txt\n-rw-r--r--  1 cmbuild cmbuild   8880128 Apr 10 23:36 boot.img\ndrwxrwxr-x  2 cmbuild cmbuild      4096 Apr 10 23:02 cache\n-rw-r--r--  1 cmbuild cmbuild  13668740 Apr 10 23:02 cache.img\n-rw-rw-r--  1 cmbuild cmbuild     58712 Apr 10 22:01 clean_steps.mk\n-rw-rw-r--  2 cmbuild cmbuild 244214934 Apr 11 00:07 cm-12-20150410-UNOFFICIAL-hammerhead.zip\n-rw-rw-r--  1 cmbuild cmbuild       132 Apr 11 00:07 cm-12-20150410-UNOFFICIAL-hammerhead.zip.md5sum\n-rw-rw-r--  2 cmbuild cmbuild 244214934 Apr 11 00:07 cm_hammerhead-ota-6eade6066f.zip\ndrwxrwxr-x  3 cmbuild cmbuild      4096 Apr 10 23:41 data\ndrwxrwxr-x  2 cmbuild cmbuild      4096 Apr 10 22:56 fake_packages\ndrwxrwxr-x  4 cmbuild cmbuild      4096 Apr 10 22:04 gen\ndrwxrwxr-x  3 cmbuild cmbuild      4096 Apr 10 22:44 install\n-rw-rw-r--  1 cmbuild cmbuild     78046 Apr 11 00:04 installed-files.txt\n-rw-rw-r--  1 cmbuild cmbuild   8080672 Apr 10 22:56 kernel\ndrwxrwxr-x 20 cmbuild cmbuild      4096 Apr 11 00:04 obj\n-rw-rw-r--  1 cmbuild cmbuild         5 Apr 11 00:06 ota_override_device\n-rw-rw-r--  1 cmbuild cmbuild        49 Apr 11 00:06 ota_script_path\n-rw-rw-r--  1 cmbuild cmbuild       836 Apr 10 22:01 previous_build_config.mk\n-rw-rw-r--  1 cmbuild cmbuild   3471363 Apr 10 23:40 ramdisk-recovery.img\n-rw-rw-r--  1 cmbuild cmbuild    796064 Apr 10 23:34 ramdisk.img\ndrwxrwxr-x  3 cmbuild cmbuild      4096 Apr 10 22:03 recovery\n-rw-r--r--  1 cmbuild cmbuild  11556864 Apr 10 23:41 recovery.img\ndrwxrwxr-x  9 cmbuild cmbuild      4096 Apr 10 23:33 root\ndrwxrwxr-x  7 cmbuild cmbuild      4096 Apr 10 23:40 symbols\ndrwxrwxr-x 15 cmbuild cmbuild      4096 Apr 10 23:51 system\n-rw-r--r--  1 cmbuild cmbuild 419157960 Apr 11 00:04 system.img\n-rw-r--r--  1 cmbuild cmbuild 140786596 Apr 10 23:41 userdata.img\ncmbuild@c8226ae3ff79:~/android/cm12$\n</code></pre>\n<p>Inspecting contents of <code>cm-12-20150410-UNOFFICIAL-hammerhead.zip</code></p>\n<pre><code>cmbuild@c8226ae3ff79:~/android/cm12$ unzip -v out/target/product/hammerhead/cm-12-20150410-UNOFFICIAL-hammerhead.zip\nArchive:  out/target/product/hammerhead/cm-12-20150410-UNOFFICIAL-hammerhead.zip\nsigned by SignApk\n Length   Method    Size  Cmpr    Date    Time   CRC-32   Name\n--------  ------  ------- ---- ---------- ----- --------  ----\n       0  Stored        0   0% 2008-02-29 02:33 00000000  system.patch.dat\n     149  Defl:N      123  17% 2008-02-29 02:33 a3a91293  META-INF/com/android/metadata\n  408960  Defl:N   265489  35% 2008-02-29 02:33 1de5a125  META-INF/com/google/android/update-binary\n    1831  Defl:N      590  68% 2008-02-29 02:33 dee0683f  META-INF/com/google/android/updater-script\n    2393  Defl:N      888  63% 2008-02-29 02:33 50280357  META-INF/org/cyanogenmod/releasekey\n 8880128  Defl:N  7732336  13% 2008-02-29 02:33 d1fe8719  boot.img\n   19329  Defl:N     4273  78% 2008-02-29 02:33 480587f1  file_contexts\n     757  Defl:N      375  51% 2008-02-29 02:33 7353c0af  install/bin/backuptool.functions\n    2187  Defl:N      806  63% 2008-02-29 02:33 99e63141  install/bin/backuptool.sh\n     990  Defl:N      505  49% 2008-02-29 02:33 9ee1cdca  install/bin/otasigcheck.sh\n420360192  Defl:N 236200233  44% 2008-02-29 02:33 cfe4e5d7  system.new.dat\n     212  Defl:N      114  46% 2008-02-29 02:33 ecc0ae87  system.transfer.list\n    4357  Defl:N     1747  60% 2008-02-29 02:33 9dc6e7b9  system/build.prop\n    1675  Defl:N      943  44% 2008-02-29 02:33 c3fc0954  META-INF/com/android/otacert\n    1148  Defl:N      605  47% 2008-02-29 02:33 bb9d55c1  META-INF/MANIFEST.MF\n    1327  Defl:N      639  52% 2008-02-29 02:33 3d6de3c8  META-INF/CERT.SF\n    1714  Defl:N     1154  33% 2008-02-29 02:33 6dfe7d7a  META-INF/CERT.RSA\n--------          -------  ---                            -------\n429687349         244210820  43%                            17 files\ncmbuild@c8226ae3ff79:~/android/cm12$\n</code></pre>\n<p>Unfortunately I do not own a Nexus 5 where to try flashing the images, so I need to stop here.</p>\n<p>One of the next days I will try building CM11 for my Samsung Galaxy SII.</p>\n<!-- markdown-link-check-enable -->\n<!-- EOF -->\n"},"config":{"title":"gmacario.github.io","description":"Gianpaolo Macario's public rants","social":{"github":{"name":"gmacario","link":"https://github.com/gmacario"},"twitter":{"name":"gpmacario","link":"https://www.twitter.com/gpmacario"}}}},"__N_SSG":true}